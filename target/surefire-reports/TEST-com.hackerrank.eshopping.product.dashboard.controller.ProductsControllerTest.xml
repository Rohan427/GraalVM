<?xml version="1.0" encoding="UTF-8"?>
<testsuite xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="https://maven.apache.org/surefire/maven-surefire-plugin/xsd/surefire-test-report.xsd" name="com.hackerrank.eshopping.product.dashboard.controller.ProductsControllerTest" time="7.251" tests="17" errors="0" skipped="0" failures="3">
  <properties>
    <property name="sun.desktop" value="windows"/>
    <property name="awt.toolkit" value="sun.awt.windows.WToolkit"/>
    <property name="file.encoding.pkg" value="sun.io"/>
    <property name="java.specification.version" value="1.8"/>
    <property name="sun.cpu.isalist" value="amd64"/>
    <property name="sun.jnu.encoding" value="Cp1252"/>
    <property name="java.class.path" value="E:\src\Kin\Dashboard\SpringBoot\target\test-classes;E:\src\Kin\Dashboard\SpringBoot\target\classes;C:\Users\pgall\.m2\repository\org\springframework\data\spring-data-jpa\2.1.2.RELEASE\spring-data-jpa-2.1.2.RELEASE.jar;C:\Users\pgall\.m2\repository\org\springframework\data\spring-data-commons\2.1.2.RELEASE\spring-data-commons-2.1.2.RELEASE.jar;C:\Users\pgall\.m2\repository\org\springframework\spring-orm\5.1.2.RELEASE\spring-orm-5.1.2.RELEASE.jar;C:\Users\pgall\.m2\repository\org\springframework\spring-jdbc\5.1.2.RELEASE\spring-jdbc-5.1.2.RELEASE.jar;C:\Users\pgall\.m2\repository\org\springframework\spring-context\5.1.2.RELEASE\spring-context-5.1.2.RELEASE.jar;C:\Users\pgall\.m2\repository\org\springframework\spring-expression\5.1.2.RELEASE\spring-expression-5.1.2.RELEASE.jar;C:\Users\pgall\.m2\repository\org\springframework\spring-aop\5.1.2.RELEASE\spring-aop-5.1.2.RELEASE.jar;C:\Users\pgall\.m2\repository\org\springframework\spring-tx\5.1.2.RELEASE\spring-tx-5.1.2.RELEASE.jar;C:\Users\pgall\.m2\repository\org\springframework\spring-beans\5.1.2.RELEASE\spring-beans-5.1.2.RELEASE.jar;C:\Users\pgall\.m2\repository\org\springframework\spring-core\5.1.2.RELEASE\spring-core-5.1.2.RELEASE.jar;C:\Users\pgall\.m2\repository\org\springframework\spring-jcl\5.1.2.RELEASE\spring-jcl-5.1.2.RELEASE.jar;C:\Users\pgall\.m2\repository\org\aspectj\aspectjrt\1.9.2\aspectjrt-1.9.2.jar;C:\Users\pgall\.m2\repository\org\slf4j\slf4j-api\1.7.25\slf4j-api-1.7.25.jar;C:\Users\pgall\.m2\repository\org\springframework\boot\spring-boot-starter-web\2.1.0.RELEASE\spring-boot-starter-web-2.1.0.RELEASE.jar;C:\Users\pgall\.m2\repository\org\springframework\boot\spring-boot-starter\2.1.0.RELEASE\spring-boot-starter-2.1.0.RELEASE.jar;C:\Users\pgall\.m2\repository\org\springframework\boot\spring-boot-starter-logging\2.1.0.RELEASE\spring-boot-starter-logging-2.1.0.RELEASE.jar;C:\Users\pgall\.m2\repository\ch\qos\logback\logback-classic\1.2.3\logback-classic-1.2.3.jar;C:\Users\pgall\.m2\repository\ch\qos\logback\logback-core\1.2.3\logback-core-1.2.3.jar;C:\Users\pgall\.m2\repository\org\apache\logging\log4j\log4j-to-slf4j\2.11.1\log4j-to-slf4j-2.11.1.jar;C:\Users\pgall\.m2\repository\org\apache\logging\log4j\log4j-api\2.11.1\log4j-api-2.11.1.jar;C:\Users\pgall\.m2\repository\org\slf4j\jul-to-slf4j\1.7.25\jul-to-slf4j-1.7.25.jar;C:\Users\pgall\.m2\repository\javax\annotation\javax.annotation-api\1.3.2\javax.annotation-api-1.3.2.jar;C:\Users\pgall\.m2\repository\org\yaml\snakeyaml\1.23\snakeyaml-1.23.jar;C:\Users\pgall\.m2\repository\org\springframework\boot\spring-boot-starter-json\2.1.0.RELEASE\spring-boot-starter-json-2.1.0.RELEASE.jar;C:\Users\pgall\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jdk8\2.9.7\jackson-datatype-jdk8-2.9.7.jar;C:\Users\pgall\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.9.7\jackson-datatype-jsr310-2.9.7.jar;C:\Users\pgall\.m2\repository\com\fasterxml\jackson\module\jackson-module-parameter-names\2.9.7\jackson-module-parameter-names-2.9.7.jar;C:\Users\pgall\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\2.1.0.RELEASE\spring-boot-starter-tomcat-2.1.0.RELEASE.jar;C:\Users\pgall\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\9.0.12\tomcat-embed-core-9.0.12.jar;C:\Users\pgall\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\9.0.12\tomcat-embed-el-9.0.12.jar;C:\Users\pgall\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\9.0.12\tomcat-embed-websocket-9.0.12.jar;C:\Users\pgall\.m2\repository\org\hibernate\validator\hibernate-validator\6.0.13.Final\hibernate-validator-6.0.13.Final.jar;C:\Users\pgall\.m2\repository\javax\validation\validation-api\2.0.1.Final\validation-api-2.0.1.Final.jar;C:\Users\pgall\.m2\repository\org\springframework\spring-web\5.1.2.RELEASE\spring-web-5.1.2.RELEASE.jar;C:\Users\pgall\.m2\repository\org\springframework\spring-webmvc\5.1.2.RELEASE\spring-webmvc-5.1.2.RELEASE.jar;C:\Users\pgall\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.2.Final\hibernate-jpa-2.1-api-1.0.2.Final.jar;C:\Users\pgall\.m2\repository\org\hibernate\hibernate-core\5.3.7.Final\hibernate-core-5.3.7.Final.jar;C:\Users\pgall\.m2\repository\org\jboss\logging\jboss-logging\3.3.2.Final\jboss-logging-3.3.2.Final.jar;C:\Users\pgall\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\pgall\.m2\repository\org\javassist\javassist\3.23.1-GA\javassist-3.23.1-GA.jar;C:\Users\pgall\.m2\repository\net\bytebuddy\byte-buddy\1.9.3\byte-buddy-1.9.3.jar;C:\Users\pgall\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\pgall\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\pgall\.m2\repository\org\jboss\jandex\2.0.5.Final\jandex-2.0.5.Final.jar;C:\Users\pgall\.m2\repository\com\fasterxml\classmate\1.4.0\classmate-1.4.0.jar;C:\Users\pgall\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\pgall\.m2\repository\org\dom4j\dom4j\2.1.1\dom4j-2.1.1.jar;C:\Users\pgall\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.4.Final\hibernate-commons-annotations-5.0.4.Final.jar;C:\Users\pgall\.m2\repository\org\hibernate\hibernate-entitymanager\5.3.7.Final\hibernate-entitymanager-5.3.7.Final.jar;C:\Users\pgall\.m2\repository\com\hackerrank\applications\junit-ordered-test-runner\1.0.0\junit-ordered-test-runner-1.0.0.jar;C:\Users\pgall\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.9.7\jackson-databind-2.9.7.jar;C:\Users\pgall\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.9.0\jackson-annotations-2.9.0.jar;C:\Users\pgall\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.9.7\jackson-core-2.9.7.jar;C:\Users\pgall\.m2\repository\commons-lang\commons-lang\2.6\commons-lang-2.6.jar;C:\Users\pgall\.m2\repository\org\jdom\jdom\1.1\jdom-1.1.jar;C:\Users\pgall\.m2\repository\junit\junit\4.12\junit-4.12.jar;C:\Users\pgall\.m2\repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;C:\Users\pgall\.m2\repository\org\springframework\spring-test\5.1.2.RELEASE\spring-test-5.1.2.RELEASE.jar;C:\Users\pgall\.m2\repository\org\springframework\boot\spring-boot-test\2.1.0.RELEASE\spring-boot-test-2.1.0.RELEASE.jar;C:\Users\pgall\.m2\repository\org\springframework\boot\spring-boot\2.1.0.RELEASE\spring-boot-2.1.0.RELEASE.jar;C:\Users\pgall\.m2\repository\org\springframework\boot\spring-boot-test-autoconfigure\2.1.0.RELEASE\spring-boot-test-autoconfigure-2.1.0.RELEASE.jar;C:\Users\pgall\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\2.1.0.RELEASE\spring-boot-autoconfigure-2.1.0.RELEASE.jar;C:\Users\pgall\.m2\repository\com\h2database\h2\1.4.197\h2-1.4.197.jar;"/>
    <property name="java.vm.vendor" value="Oracle Corporation"/>
    <property name="sun.arch.data.model" value="64"/>
    <property name="user.variant" value=""/>
    <property name="java.vendor.url" value="http://java.oracle.com/"/>
    <property name="user.timezone" value="America/Denver"/>
    <property name="java.vm.specification.version" value="1.8"/>
    <property name="os.name" value="Windows 10"/>
    <property name="sun.java.launcher" value="SUN_STANDARD"/>
    <property name="user.country" value="US"/>
    <property name="sun.boot.library.path" value="C:\Program Files\Java\jdk1.8.0_261\jre\bin"/>
    <property name="sun.java.command" value="C:\Users\pgall\AppData\Local\Temp\surefire8354138396608274867\surefirebooter276162007293226475.jar C:\Users\pgall\AppData\Local\Temp\surefire8354138396608274867 2022-06-30T16-40-32_636-jvmRun1 surefire1211578877450296839tmp surefire_01014427437038401249tmp"/>
    <property name="surefire.test.class.path" value="E:\src\Kin\Dashboard\SpringBoot\target\test-classes;E:\src\Kin\Dashboard\SpringBoot\target\classes;C:\Users\pgall\.m2\repository\org\springframework\data\spring-data-jpa\2.1.2.RELEASE\spring-data-jpa-2.1.2.RELEASE.jar;C:\Users\pgall\.m2\repository\org\springframework\data\spring-data-commons\2.1.2.RELEASE\spring-data-commons-2.1.2.RELEASE.jar;C:\Users\pgall\.m2\repository\org\springframework\spring-orm\5.1.2.RELEASE\spring-orm-5.1.2.RELEASE.jar;C:\Users\pgall\.m2\repository\org\springframework\spring-jdbc\5.1.2.RELEASE\spring-jdbc-5.1.2.RELEASE.jar;C:\Users\pgall\.m2\repository\org\springframework\spring-context\5.1.2.RELEASE\spring-context-5.1.2.RELEASE.jar;C:\Users\pgall\.m2\repository\org\springframework\spring-expression\5.1.2.RELEASE\spring-expression-5.1.2.RELEASE.jar;C:\Users\pgall\.m2\repository\org\springframework\spring-aop\5.1.2.RELEASE\spring-aop-5.1.2.RELEASE.jar;C:\Users\pgall\.m2\repository\org\springframework\spring-tx\5.1.2.RELEASE\spring-tx-5.1.2.RELEASE.jar;C:\Users\pgall\.m2\repository\org\springframework\spring-beans\5.1.2.RELEASE\spring-beans-5.1.2.RELEASE.jar;C:\Users\pgall\.m2\repository\org\springframework\spring-core\5.1.2.RELEASE\spring-core-5.1.2.RELEASE.jar;C:\Users\pgall\.m2\repository\org\springframework\spring-jcl\5.1.2.RELEASE\spring-jcl-5.1.2.RELEASE.jar;C:\Users\pgall\.m2\repository\org\aspectj\aspectjrt\1.9.2\aspectjrt-1.9.2.jar;C:\Users\pgall\.m2\repository\org\slf4j\slf4j-api\1.7.25\slf4j-api-1.7.25.jar;C:\Users\pgall\.m2\repository\org\springframework\boot\spring-boot-starter-web\2.1.0.RELEASE\spring-boot-starter-web-2.1.0.RELEASE.jar;C:\Users\pgall\.m2\repository\org\springframework\boot\spring-boot-starter\2.1.0.RELEASE\spring-boot-starter-2.1.0.RELEASE.jar;C:\Users\pgall\.m2\repository\org\springframework\boot\spring-boot-starter-logging\2.1.0.RELEASE\spring-boot-starter-logging-2.1.0.RELEASE.jar;C:\Users\pgall\.m2\repository\ch\qos\logback\logback-classic\1.2.3\logback-classic-1.2.3.jar;C:\Users\pgall\.m2\repository\ch\qos\logback\logback-core\1.2.3\logback-core-1.2.3.jar;C:\Users\pgall\.m2\repository\org\apache\logging\log4j\log4j-to-slf4j\2.11.1\log4j-to-slf4j-2.11.1.jar;C:\Users\pgall\.m2\repository\org\apache\logging\log4j\log4j-api\2.11.1\log4j-api-2.11.1.jar;C:\Users\pgall\.m2\repository\org\slf4j\jul-to-slf4j\1.7.25\jul-to-slf4j-1.7.25.jar;C:\Users\pgall\.m2\repository\javax\annotation\javax.annotation-api\1.3.2\javax.annotation-api-1.3.2.jar;C:\Users\pgall\.m2\repository\org\yaml\snakeyaml\1.23\snakeyaml-1.23.jar;C:\Users\pgall\.m2\repository\org\springframework\boot\spring-boot-starter-json\2.1.0.RELEASE\spring-boot-starter-json-2.1.0.RELEASE.jar;C:\Users\pgall\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jdk8\2.9.7\jackson-datatype-jdk8-2.9.7.jar;C:\Users\pgall\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.9.7\jackson-datatype-jsr310-2.9.7.jar;C:\Users\pgall\.m2\repository\com\fasterxml\jackson\module\jackson-module-parameter-names\2.9.7\jackson-module-parameter-names-2.9.7.jar;C:\Users\pgall\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\2.1.0.RELEASE\spring-boot-starter-tomcat-2.1.0.RELEASE.jar;C:\Users\pgall\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\9.0.12\tomcat-embed-core-9.0.12.jar;C:\Users\pgall\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\9.0.12\tomcat-embed-el-9.0.12.jar;C:\Users\pgall\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\9.0.12\tomcat-embed-websocket-9.0.12.jar;C:\Users\pgall\.m2\repository\org\hibernate\validator\hibernate-validator\6.0.13.Final\hibernate-validator-6.0.13.Final.jar;C:\Users\pgall\.m2\repository\javax\validation\validation-api\2.0.1.Final\validation-api-2.0.1.Final.jar;C:\Users\pgall\.m2\repository\org\springframework\spring-web\5.1.2.RELEASE\spring-web-5.1.2.RELEASE.jar;C:\Users\pgall\.m2\repository\org\springframework\spring-webmvc\5.1.2.RELEASE\spring-webmvc-5.1.2.RELEASE.jar;C:\Users\pgall\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.2.Final\hibernate-jpa-2.1-api-1.0.2.Final.jar;C:\Users\pgall\.m2\repository\org\hibernate\hibernate-core\5.3.7.Final\hibernate-core-5.3.7.Final.jar;C:\Users\pgall\.m2\repository\org\jboss\logging\jboss-logging\3.3.2.Final\jboss-logging-3.3.2.Final.jar;C:\Users\pgall\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\pgall\.m2\repository\org\javassist\javassist\3.23.1-GA\javassist-3.23.1-GA.jar;C:\Users\pgall\.m2\repository\net\bytebuddy\byte-buddy\1.9.3\byte-buddy-1.9.3.jar;C:\Users\pgall\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\pgall\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\pgall\.m2\repository\org\jboss\jandex\2.0.5.Final\jandex-2.0.5.Final.jar;C:\Users\pgall\.m2\repository\com\fasterxml\classmate\1.4.0\classmate-1.4.0.jar;C:\Users\pgall\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\pgall\.m2\repository\org\dom4j\dom4j\2.1.1\dom4j-2.1.1.jar;C:\Users\pgall\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.4.Final\hibernate-commons-annotations-5.0.4.Final.jar;C:\Users\pgall\.m2\repository\org\hibernate\hibernate-entitymanager\5.3.7.Final\hibernate-entitymanager-5.3.7.Final.jar;C:\Users\pgall\.m2\repository\com\hackerrank\applications\junit-ordered-test-runner\1.0.0\junit-ordered-test-runner-1.0.0.jar;C:\Users\pgall\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.9.7\jackson-databind-2.9.7.jar;C:\Users\pgall\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.9.0\jackson-annotations-2.9.0.jar;C:\Users\pgall\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.9.7\jackson-core-2.9.7.jar;C:\Users\pgall\.m2\repository\commons-lang\commons-lang\2.6\commons-lang-2.6.jar;C:\Users\pgall\.m2\repository\org\jdom\jdom\1.1\jdom-1.1.jar;C:\Users\pgall\.m2\repository\junit\junit\4.12\junit-4.12.jar;C:\Users\pgall\.m2\repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;C:\Users\pgall\.m2\repository\org\springframework\spring-test\5.1.2.RELEASE\spring-test-5.1.2.RELEASE.jar;C:\Users\pgall\.m2\repository\org\springframework\boot\spring-boot-test\2.1.0.RELEASE\spring-boot-test-2.1.0.RELEASE.jar;C:\Users\pgall\.m2\repository\org\springframework\boot\spring-boot\2.1.0.RELEASE\spring-boot-2.1.0.RELEASE.jar;C:\Users\pgall\.m2\repository\org\springframework\boot\spring-boot-test-autoconfigure\2.1.0.RELEASE\spring-boot-test-autoconfigure-2.1.0.RELEASE.jar;C:\Users\pgall\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\2.1.0.RELEASE\spring-boot-autoconfigure-2.1.0.RELEASE.jar;C:\Users\pgall\.m2\repository\com\h2database\h2\1.4.197\h2-1.4.197.jar;"/>
    <property name="sun.cpu.endian" value="little"/>
    <property name="user.home" value="C:\Users\pgall"/>
    <property name="user.language" value="en"/>
    <property name="java.specification.vendor" value="Oracle Corporation"/>
    <property name="java.home" value="C:\Program Files\Java\jdk1.8.0_261\jre"/>
    <property name="basedir" value="E:\src\Kin\Dashboard\SpringBoot"/>
    <property name="file.separator" value="\"/>
    <property name="line.separator" value="&#10;"/>
    <property name="java.vm.specification.vendor" value="Oracle Corporation"/>
    <property name="java.specification.name" value="Java Platform API Specification"/>
    <property name="java.awt.graphicsenv" value="sun.awt.Win32GraphicsEnvironment"/>
    <property name="surefire.real.class.path" value="C:\Users\pgall\AppData\Local\Temp\surefire8354138396608274867\surefirebooter276162007293226475.jar"/>
    <property name="sun.boot.class.path" value="C:\Program Files\Java\jdk1.8.0_261\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_261\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_261\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_261\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_261\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_261\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_261\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_261\jre\classes"/>
    <property name="user.script" value=""/>
    <property name="sun.management.compiler" value="HotSpot 64-Bit Tiered Compilers"/>
    <property name="java.runtime.version" value="1.8.0_261-b12"/>
    <property name="user.name" value="pgall"/>
    <property name="path.separator" value=";"/>
    <property name="os.version" value="10.0"/>
    <property name="java.endorsed.dirs" value="C:\Program Files\Java\jdk1.8.0_261\jre\lib\endorsed"/>
    <property name="java.runtime.name" value="Java(TM) SE Runtime Environment"/>
    <property name="file.encoding" value="UTF-8"/>
    <property name="java.vm.name" value="Java HotSpot(TM) 64-Bit Server VM"/>
    <property name="maven.ext.class.path" value="E:\Program Files\netbeans\java\maven-nblib\netbeans-eventspy.jar"/>
    <property name="localRepository" value="C:\Users\pgall\.m2\repository"/>
    <property name="java.vendor.url.bug" value="http://bugreport.sun.com/bugreport/"/>
    <property name="java.io.tmpdir" value="C:\Users\pgall\AppData\Local\Temp\"/>
    <property name="java.version" value="1.8.0_261"/>
    <property name="user.dir" value="E:\src\Kin\Dashboard\SpringBoot"/>
    <property name="os.arch" value="amd64"/>
    <property name="java.vm.specification.name" value="Java Virtual Machine Specification"/>
    <property name="java.awt.printerjob" value="sun.awt.windows.WPrinterJob"/>
    <property name="sun.os.patch.level" value=""/>
    <property name="java.library.path" value="C:\Program Files\Java\jdk1.8.0_261\jre\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\apache-maven-3.8.4\bin;F:\OracleDBHome\bin;C:\Program Files (x86)\Common Files\Intel\Shared Libraries\redist\intel64_win\compiler;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\Java\jdk1.8.0_101\bin;C:\Program Files\Microsoft SQL Server\130\Tools\Binn\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files\Perforce\;C:\Program Files (x86)\Groovy\bin;C:\Program Files (x86)\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files\Azure Data Studio\bin;C:\Program Files (x86)\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files\dotnet\;C:\Program Files\Git\cmd;C:\Program Files (x86)\PuTTY;E:\Tools\Maven\apache-maven-3.6.3\bin;C:\Users\pgall\AppData\Local\Microsoft\WindowsApps;C:\Users\pgall\.dotnet\tools;C:\Users\pgall\AppData\Local\gitkraken\bin;C:\Program Files\Azure Data Studio\bin;C:\Users\pgall\.dotnet\tools;."/>
    <property name="java.vm.info" value="mixed mode"/>
    <property name="java.vendor" value="Oracle Corporation"/>
    <property name="java.vm.version" value="25.261-b12"/>
    <property name="java.ext.dirs" value="C:\Program Files\Java\jdk1.8.0_261\jre\lib\ext;C:\Windows\Sun\Java\lib\ext"/>
    <property name="sun.io.unicode.encoding" value="UnicodeLittle"/>
    <property name="java.class.version" value="52.0"/>
  </properties>
  <testcase name="createProduct" classname="com.hackerrank.eshopping.product.dashboard.controller.ProductsControllerTest" time="5.964"/>
  <testcase name="createProductWithExistingId" classname="com.hackerrank.eshopping.product.dashboard.controller.ProductsControllerTest" time="0"/>
  <testcase name="updateProductRetailPrice" classname="com.hackerrank.eshopping.product.dashboard.controller.ProductsControllerTest" time="0.002"/>
  <testcase name="updateProductDiscountPrice" classname="com.hackerrank.eshopping.product.dashboard.controller.ProductsControllerTest" time="0.001"/>
  <testcase name="updateProductAvailability" classname="com.hackerrank.eshopping.product.dashboard.controller.ProductsControllerTest" time="0.002"/>
  <testcase name="updateProductRetailAndDiscountPrice" classname="com.hackerrank.eshopping.product.dashboard.controller.ProductsControllerTest" time="0.002"/>
  <testcase name="updateProductRetailPriceAndAvailability" classname="com.hackerrank.eshopping.product.dashboard.controller.ProductsControllerTest" time="0.002"/>
  <testcase name="updateProductDiscountPriceAndAvailability" classname="com.hackerrank.eshopping.product.dashboard.controller.ProductsControllerTest" time="0.001"/>
  <testcase name="updateProductRetailPriceDiscountPriceAndAvailability" classname="com.hackerrank.eshopping.product.dashboard.controller.ProductsControllerTest" time="0.002"/>
  <testcase name="updateAvailabilityOfNonExistingProduct" classname="com.hackerrank.eshopping.product.dashboard.controller.ProductsControllerTest" time="0"/>
  <testcase name="findProductById" classname="com.hackerrank.eshopping.product.dashboard.controller.ProductsControllerTest" time="0.001"/>
  <testcase name="findProductByNonExistingId" classname="com.hackerrank.eshopping.product.dashboard.controller.ProductsControllerTest" time="0"/>
  <testcase name="findProductsByCategory" classname="com.hackerrank.eshopping.product.dashboard.controller.ProductsControllerTest" time="0.575">
    <failure type="java.lang.AssertionError">java.lang.AssertionError
	at com.hackerrank.eshopping.product.dashboard.controller.ProductsControllerTest.findProductsByCategory(ProductsControllerTest.java:927)
</failure>
    <system-out><![CDATA[In getProductsByCategory: Accessories
In getProductByCat()
Hibernate: select productmod0_.id as id1_0_, productmod0_.availability as availabi2_0_, productmod0_.category as category3_0_, productmod0_.discount_percent as discount4_0_, productmod0_.discounted_price as discount5_0_, productmod0_.name as name6_0_, productmod0_.retail_price as retail_p7_0_ from product productmod0_ where productmod0_.category=? order by productmod0_.availability desc, productmod0_.discounted_price asc, productmod0_.id asc
&amp#27;[0;31mExpected <{"id":8,"name":"Kaftan","category":"Accessories","retail_price":237.0,"discounted_price":215.67,"availability":true}> but was <{"id":8,"name":"Kaftan","category":"Accessories","retail_price":237.0,"discounted_price":215.67,"discount_percent":100,"availability":true}> (at index 0).&amp#27;[0m

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 1, "name": "Dressing Gown", "category": "Full Body Outfits", "retail_price": 303.0, "discounted_price": 251.49, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<java.lang.String> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.addProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {}
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 2, "name": "Shoes", "category": "Footwear", "retail_price": 150.0, "discounted_price": 123.0, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<java.lang.String> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.addProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {}
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 3, "name": "Nightgown", "category": "Full Body Outfits", "retail_price": 307.0, "discounted_price": 254.81, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<java.lang.String> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.addProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {}
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 4, "name": "Boots", "category": "Footwear", "retail_price": 162.0, "discounted_price": 132.84, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<java.lang.String> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.addProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {}
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 5, "name": "Ball Gown", "category": "Full Body Outfits", "retail_price": 337.0, "discounted_price": 272.97, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<java.lang.String> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.addProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {}
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 6, "name": "Shawl", "category": "Accessories", "retail_price": 283.0, "discounted_price": 260.36, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<java.lang.String> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.addProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {}
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 7, "name": "Belt", "category": "Accessories", "retail_price": 471.0, "discounted_price": 419.19, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<java.lang.String> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.addProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {}
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 8, "name": "Kaftan", "category": "Accessories", "retail_price": 237.0, "discounted_price": 215.67, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<java.lang.String> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.addProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {}
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 9, "name": "Overalls", "category": "Full Body Outfits", "retail_price": 374.0, "discounted_price": 321.64, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<java.lang.String> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.addProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {}
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 10, "name": "Cufflinks", "category": "Accessories", "retail_price": 284.0, "discounted_price": 247.08, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<java.lang.String> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.addProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {}
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 11, "name": "Cargos", "category": "Bottoms", "retail_price": 498.0, "discounted_price": 428.28, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<java.lang.String> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.addProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {}
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 12, "name": "Poncho", "category": "Accessories", "retail_price": 280.0, "discounted_price": 224.7, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<java.lang.String> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.addProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {}
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 13, "name": "Cummerbund", "category": "Accessories", "retail_price": 435.0, "discounted_price": 400.2, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<java.lang.String> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.addProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {}
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 14, "name": "Dress", "category": "Full Body Outfits", "retail_price": 175.0, "discounted_price": 140.0, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<java.lang.String> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.addProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {}
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 15, "name": "Trainers", "category": "Footwear", "retail_price": 228.0, "discounted_price": 184.68, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<java.lang.String> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.addProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {}
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 16, "name": "Tracksuit", "category": "Full Body Outfits", "retail_price": 471.0, "discounted_price": 423.9, "availability": false}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<java.lang.String> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.addProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {}
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 17, "name": "Tailcoat", "category": "Full Body Outfits", "retail_price": 307.0, "discounted_price": 254.81, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<java.lang.String> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.addProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {}
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 18, "name": "Vest", "category": "Tops", "retail_price": 446.0, "discounted_price": 392.48, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<java.lang.String> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.addProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {}
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 19, "name": "Suit", "category": "Full Body Outfits", "retail_price": 158.0, "discounted_price": 135.88, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<java.lang.String> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.addProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {}
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 20, "name": "Catsuit", "category": "Full Body Outfits", "retail_price": 158.0, "discounted_price": 135.88, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<java.lang.String> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.addProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {}
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 21, "name": "Dungarees", "category": "Full Body Outfits", "retail_price": 437.0, "discounted_price": 362.71, "availability": false}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<java.lang.String> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.addProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {}
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 1, "name": "Dressing Gown", "category": "Underwear", "retail_price": 303.0, "discounted_price": 251.49, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<java.lang.String> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.addProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 400
    Error message = null
          Headers = {}
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = PUT
      Request URI = /products/6
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"retail_price": 325.45, "discounted_price": 260.36, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<java.lang.String> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.updateProduct(java.lang.Long,com.hackerrank.eshopping.product.dashboard.model.UpdateData)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = {}
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = PUT
      Request URI = /products/10
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"retail_price": 284.0, "discounted_price": 227.2, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<java.lang.String> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.updateProduct(java.lang.Long,com.hackerrank.eshopping.product.dashboard.model.UpdateData)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = {}
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = PUT
      Request URI = /products/2
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"retail_price": 150.0, "discounted_price": 123.0, "availability": false}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<java.lang.String> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.updateProduct(java.lang.Long,com.hackerrank.eshopping.product.dashboard.model.UpdateData)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = {}
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = PUT
      Request URI = /products/12
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"retail_price": 350.0, "discounted_price": 283.5, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<java.lang.String> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.updateProduct(java.lang.Long,com.hackerrank.eshopping.product.dashboard.model.UpdateData)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = {}
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = PUT
      Request URI = /products/19
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"retail_price": 125.0, "discounted_price": 100.0, "availability": false}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<java.lang.String> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.updateProduct(java.lang.Long,com.hackerrank.eshopping.product.dashboard.model.UpdateData)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = {}
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = PUT
      Request URI = /products/20
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"retail_price": 250.0, "discounted_price": 200.0, "availability": false}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<java.lang.String> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.updateProduct(java.lang.Long,com.hackerrank.eshopping.product.dashboard.model.UpdateData)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = {}
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = PUT
      Request URI = /products/13
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"retail_price": 500.0, "discounted_price": 450.0, "availability": false}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<java.lang.String> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.updateProduct(java.lang.Long,com.hackerrank.eshopping.product.dashboard.model.UpdateData)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = {}
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = PUT
      Request URI = /products/25
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"retail_price": 311.0, "discounted_price": 258.13, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<java.lang.String> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.updateProduct(java.lang.Long,com.hackerrank.eshopping.product.dashboard.model.UpdateData)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 400
    Error message = null
          Headers = {}
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /products/2
       Parameters = {}
          Headers = {}
             Body = null
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<java.lang.String> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.getProductById(java.lang.Long)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":2,"name":"Shoes","category":"Footwear","retail_price":150.0,"discounted_price":123.0,"discount_percent":18,"availability":false}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /products/25
       Parameters = {}
          Headers = {}
             Body = null
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<java.lang.String> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.getProductById(java.lang.Long)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 404
    Error message = null
          Headers = {}
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /products
       Parameters = {category=[Accessories]}
          Headers = {}
             Body = null
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<java.util.List<com.hackerrank.eshopping.product.dashboard.model.Product>> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.getProductsByCategory(java.lang.String)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = [{"id":8,"name":"Kaftan","category":"Accessories","retail_price":237.0,"discounted_price":215.67,"discount_percent":100,"availability":true},{"id":10,"name":"Cufflinks","category":"Accessories","retail_price":284.0,"discounted_price":227.2,"discount_percent":20,"availability":true},{"id":6,"name":"Shawl","category":"Accessories","retail_price":325.45,"discounted_price":260.36,"discount_percent":7,"availability":true},{"id":12,"name":"Poncho","category":"Accessories","retail_price":350.0,"discounted_price":283.5,"discount_percent":19,"availability":true},{"id":7,"name":"Belt","category":"Accessories","retail_price":471.0,"discounted_price":419.19,"discount_percent":100,"availability":true},{"id":13,"name":"Cummerbund","category":"Accessories","retail_price":500.0,"discounted_price":450.0,"discount_percent":8,"availability":false}]
    Forwarded URL = null
   Redirected URL = null
          Cookies = []
]]></system-out>
  </testcase>
  <testcase name="findProductsByNonExistingCategory" classname="com.hackerrank.eshopping.product.dashboard.controller.ProductsControllerTest" time="0.001"/>
  <testcase name="findProductsByCategoryAndAvailability" classname="com.hackerrank.eshopping.product.dashboard.controller.ProductsControllerTest" time="0.073">
    <failure type="java.lang.AssertionError">java.lang.AssertionError
	at com.hackerrank.eshopping.product.dashboard.controller.ProductsControllerTest.findProductsByCategoryAndAvailability(ProductsControllerTest.java:1038)
</failure>
    <system-out><![CDATA[In getproductByCatAndAvail: Full Body Outfits, true
Hibernate: select productmod0_.id as id1_0_, productmod0_.availability as availabi2_0_, productmod0_.category as category3_0_, productmod0_.discount_percent as discount4_0_, productmod0_.discounted_price as discount5_0_, productmod0_.name as name6_0_, productmod0_.retail_price as retail_p7_0_ from product productmod0_ where productmod0_.category=? order by productmod0_.availability desc, productmod0_.discounted_price asc, productmod0_.id asc

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 1, "name": "Dressing Gown", "category": "Full Body Outfits", "retail_price": 303.0, "discounted_price": 251.49, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<java.lang.String> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.addProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {}
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 2, "name": "Shoes", "category": "Footwear", "retail_price": 150.0, "discounted_price": 123.0, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<java.lang.String> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.addProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {}
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 3, "name": "Nightgown", "category": "Full Body Outfits", "retail_price": 307.0, "discounted_price": 254.81, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<java.lang.String> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.addProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {}
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 4, "name": "Boots", "category": "Footwear", "retail_price": 162.0, "discounted_price": 132.84, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<java.lang.String> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.addProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {}
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 5, "name": "Ball Gown", "category": "Full Body Outfits", "retail_price": 337.0, "discounted_price": 272.97, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<java.lang.String> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.addProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {}
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 6, "name": "Shawl", "category": "Accessories", "retail_price": 283.0, "discounted_price": 260.36, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<java.lang.String> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.addProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {}
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 7, "name": "Belt", "category": "Accessories", "retail_price": 471.0, "discounted_price": 419.19, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<java.lang.String> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.addProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {}
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 8, "name": "Kaftan", "category": "Accessories", "retail_price": 237.0, "discounted_price": 215.67, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<java.lang.String> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.addProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {}
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 9, "name": "Overalls", "category": "Full Body Outfits", "retail_price": 374.0, "discounted_price": 321.64, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<java.lang.String> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.addProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {}
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 10, "name": "Cufflinks", "category": "Accessories", "retail_price": 284.0, "discounted_price": 247.08, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<java.lang.String> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.addProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {}
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 11, "name": "Cargos", "category": "Bottoms", "retail_price": 498.0, "discounted_price": 428.28, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<java.lang.String> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.addProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {}
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 12, "name": "Poncho", "category": "Accessories", "retail_price": 280.0, "discounted_price": 224.7, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<java.lang.String> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.addProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {}
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 13, "name": "Cummerbund", "category": "Accessories", "retail_price": 435.0, "discounted_price": 400.2, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<java.lang.String> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.addProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {}
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 14, "name": "Dress", "category": "Full Body Outfits", "retail_price": 175.0, "discounted_price": 140.0, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<java.lang.String> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.addProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {}
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 15, "name": "Trainers", "category": "Footwear", "retail_price": 228.0, "discounted_price": 184.68, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<java.lang.String> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.addProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {}
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 16, "name": "Tracksuit", "category": "Full Body Outfits", "retail_price": 471.0, "discounted_price": 423.9, "availability": false}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<java.lang.String> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.addProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {}
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 17, "name": "Tailcoat", "category": "Full Body Outfits", "retail_price": 307.0, "discounted_price": 254.81, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<java.lang.String> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.addProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {}
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 18, "name": "Vest", "category": "Tops", "retail_price": 446.0, "discounted_price": 392.48, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<java.lang.String> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.addProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {}
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 19, "name": "Suit", "category": "Full Body Outfits", "retail_price": 158.0, "discounted_price": 135.88, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<java.lang.String> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.addProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {}
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 20, "name": "Catsuit", "category": "Full Body Outfits", "retail_price": 158.0, "discounted_price": 135.88, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<java.lang.String> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.addProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {}
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 21, "name": "Dungarees", "category": "Full Body Outfits", "retail_price": 437.0, "discounted_price": 362.71, "availability": false}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<java.lang.String> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.addProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {}
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 1, "name": "Dressing Gown", "category": "Underwear", "retail_price": 303.0, "discounted_price": 251.49, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<java.lang.String> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.addProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 400
    Error message = null
          Headers = {}
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = PUT
      Request URI = /products/6
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"retail_price": 325.45, "discounted_price": 260.36, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<java.lang.String> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.updateProduct(java.lang.Long,com.hackerrank.eshopping.product.dashboard.model.UpdateData)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = {}
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = PUT
      Request URI = /products/10
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"retail_price": 284.0, "discounted_price": 227.2, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<java.lang.String> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.updateProduct(java.lang.Long,com.hackerrank.eshopping.product.dashboard.model.UpdateData)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = {}
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = PUT
      Request URI = /products/2
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"retail_price": 150.0, "discounted_price": 123.0, "availability": false}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<java.lang.String> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.updateProduct(java.lang.Long,com.hackerrank.eshopping.product.dashboard.model.UpdateData)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = {}
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = PUT
      Request URI = /products/12
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"retail_price": 350.0, "discounted_price": 283.5, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<java.lang.String> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.updateProduct(java.lang.Long,com.hackerrank.eshopping.product.dashboard.model.UpdateData)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = {}
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = PUT
      Request URI = /products/19
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"retail_price": 125.0, "discounted_price": 100.0, "availability": false}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<java.lang.String> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.updateProduct(java.lang.Long,com.hackerrank.eshopping.product.dashboard.model.UpdateData)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = {}
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = PUT
      Request URI = /products/20
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"retail_price": 250.0, "discounted_price": 200.0, "availability": false}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<java.lang.String> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.updateProduct(java.lang.Long,com.hackerrank.eshopping.product.dashboard.model.UpdateData)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = {}
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = PUT
      Request URI = /products/13
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"retail_price": 500.0, "discounted_price": 450.0, "availability": false}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<java.lang.String> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.updateProduct(java.lang.Long,com.hackerrank.eshopping.product.dashboard.model.UpdateData)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = {}
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = PUT
      Request URI = /products/25
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"retail_price": 311.0, "discounted_price": 258.13, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<java.lang.String> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.updateProduct(java.lang.Long,com.hackerrank.eshopping.product.dashboard.model.UpdateData)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 400
    Error message = null
          Headers = {}
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /products/2
       Parameters = {}
          Headers = {}
             Body = null
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<java.lang.String> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.getProductById(java.lang.Long)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":2,"name":"Shoes","category":"Footwear","retail_price":150.0,"discounted_price":123.0,"discount_percent":18,"availability":false}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /products/25
       Parameters = {}
          Headers = {}
             Body = null
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<java.lang.String> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.getProductById(java.lang.Long)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 404
    Error message = null
          Headers = {}
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /products
       Parameters = {category=[Accessories]}
          Headers = {}
             Body = null
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<java.util.List<com.hackerrank.eshopping.product.dashboard.model.Product>> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.getProductsByCategory(java.lang.String)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = [{"id":8,"name":"Kaftan","category":"Accessories","retail_price":237.0,"discounted_price":215.67,"discount_percent":100,"availability":true},{"id":10,"name":"Cufflinks","category":"Accessories","retail_price":284.0,"discounted_price":227.2,"discount_percent":20,"availability":true},{"id":6,"name":"Shawl","category":"Accessories","retail_price":325.45,"discounted_price":260.36,"discount_percent":7,"availability":true},{"id":12,"name":"Poncho","category":"Accessories","retail_price":350.0,"discounted_price":283.5,"discount_percent":19,"availability":true},{"id":7,"name":"Belt","category":"Accessories","retail_price":471.0,"discounted_price":419.19,"discount_percent":100,"availability":true},{"id":13,"name":"Cummerbund","category":"Accessories","retail_price":500.0,"discounted_price":450.0,"discount_percent":8,"availability":false}]
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /products
       Parameters = {category=[Swimwear]}
          Headers = {}
             Body = null
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<java.util.List<com.hackerrank.eshopping.product.dashboard.model.Product>> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.getProductsByCategory(java.lang.String)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = []
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /products
       Parameters = {category=[Full Body Outfits], availability=[1]}
          Headers = {}
             Body = null
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<java.util.List<com.hackerrank.eshopping.product.dashboard.model.Product>> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.getproductByCatAndAvail(java.lang.String,boolean)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = [{"id":14,"name":"Dress","category":"Full Body Outfits","retail_price":175.0,"discounted_price":140.0,"discount_percent":100,"availability":true},{"id":1,"name":"Dressing Gown","category":"Full Body Outfits","retail_price":303.0,"discounted_price":251.49,"discount_percent":100,"availability":true},{"id":3,"name":"Nightgown","category":"Full Body Outfits","retail_price":307.0,"discounted_price":254.81,"discount_percent":100,"availability":true},{"id":17,"name":"Tailcoat","category":"Full Body Outfits","retail_price":307.0,"discounted_price":254.81,"discount_percent":100,"availability":true},{"id":5,"name":"Ball Gown","category":"Full Body Outfits","retail_price":337.0,"discounted_price":272.97,"discount_percent":100,"availability":true},{"id":9,"name":"Overalls","category":"Full Body Outfits","retail_price":374.0,"discounted_price":321.64,"discount_percent":100,"availability":true},{"id":19,"name":"Suit","category":"Full Body Outfits","retail_price":125.0,"discounted_price":100.0,"discount_percent":36,"availability":false},{"id":20,"name":"Catsuit","category":"Full Body Outfits","retail_price":250.0,"discounted_price":200.0,"discount_percent":14,"availability":false},{"id":21,"name":"Dungarees","category":"Full Body Outfits","retail_price":437.0,"discounted_price":362.71,"discount_percent":100,"availability":false},{"id":16,"name":"Tracksuit","category":"Full Body Outfits","retail_price":471.0,"discounted_price":423.9,"discount_percent":100,"availability":false}]
    Forwarded URL = null
   Redirected URL = null
          Cookies = []
]]></system-out>
  </testcase>
  <testcase name="findProductsByNonExistingCategoryAndAvailability" classname="com.hackerrank.eshopping.product.dashboard.controller.ProductsControllerTest" time="0.001"/>
  <testcase name="findAllProducts" classname="com.hackerrank.eshopping.product.dashboard.controller.ProductsControllerTest" time="0.077">
    <failure type="java.lang.AssertionError">java.lang.AssertionError
	at com.hackerrank.eshopping.product.dashboard.controller.ProductsControllerTest.findAllProducts(ProductsControllerTest.java:1323)
</failure>
    <system-out><![CDATA[Hibernate: select productmod0_.id as id1_0_, productmod0_.availability as availabi2_0_, productmod0_.category as category3_0_, productmod0_.discount_percent as discount4_0_, productmod0_.discounted_price as discount5_0_, productmod0_.name as name6_0_, productmod0_.retail_price as retail_p7_0_ from product productmod0_
In getProducts
&amp#27;[0;31mExpected <{"id":1,"name":"Dressing Gown","category":"Full Body Outfits","retail_price":303.0,"discounted_price":251.49,"availability":true}> but was <{"id":1,"name":"Dressing Gown","category":"Full Body Outfits","retail_price":303.0,"discounted_price":251.49,"discount_percent":100,"availability":true}> (at index 0).&amp#27;[0m

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 1, "name": "Dressing Gown", "category": "Full Body Outfits", "retail_price": 303.0, "discounted_price": 251.49, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<java.lang.String> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.addProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {}
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 2, "name": "Shoes", "category": "Footwear", "retail_price": 150.0, "discounted_price": 123.0, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<java.lang.String> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.addProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {}
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 3, "name": "Nightgown", "category": "Full Body Outfits", "retail_price": 307.0, "discounted_price": 254.81, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<java.lang.String> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.addProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {}
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 4, "name": "Boots", "category": "Footwear", "retail_price": 162.0, "discounted_price": 132.84, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<java.lang.String> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.addProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {}
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 5, "name": "Ball Gown", "category": "Full Body Outfits", "retail_price": 337.0, "discounted_price": 272.97, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<java.lang.String> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.addProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {}
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 6, "name": "Shawl", "category": "Accessories", "retail_price": 283.0, "discounted_price": 260.36, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<java.lang.String> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.addProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {}
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 7, "name": "Belt", "category": "Accessories", "retail_price": 471.0, "discounted_price": 419.19, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<java.lang.String> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.addProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {}
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 8, "name": "Kaftan", "category": "Accessories", "retail_price": 237.0, "discounted_price": 215.67, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<java.lang.String> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.addProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {}
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 9, "name": "Overalls", "category": "Full Body Outfits", "retail_price": 374.0, "discounted_price": 321.64, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<java.lang.String> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.addProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {}
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 10, "name": "Cufflinks", "category": "Accessories", "retail_price": 284.0, "discounted_price": 247.08, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<java.lang.String> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.addProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {}
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 11, "name": "Cargos", "category": "Bottoms", "retail_price": 498.0, "discounted_price": 428.28, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<java.lang.String> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.addProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {}
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 12, "name": "Poncho", "category": "Accessories", "retail_price": 280.0, "discounted_price": 224.7, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<java.lang.String> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.addProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {}
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 13, "name": "Cummerbund", "category": "Accessories", "retail_price": 435.0, "discounted_price": 400.2, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<java.lang.String> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.addProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {}
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 14, "name": "Dress", "category": "Full Body Outfits", "retail_price": 175.0, "discounted_price": 140.0, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<java.lang.String> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.addProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {}
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 15, "name": "Trainers", "category": "Footwear", "retail_price": 228.0, "discounted_price": 184.68, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<java.lang.String> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.addProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {}
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 16, "name": "Tracksuit", "category": "Full Body Outfits", "retail_price": 471.0, "discounted_price": 423.9, "availability": false}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<java.lang.String> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.addProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {}
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 17, "name": "Tailcoat", "category": "Full Body Outfits", "retail_price": 307.0, "discounted_price": 254.81, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<java.lang.String> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.addProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {}
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 18, "name": "Vest", "category": "Tops", "retail_price": 446.0, "discounted_price": 392.48, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<java.lang.String> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.addProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {}
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 19, "name": "Suit", "category": "Full Body Outfits", "retail_price": 158.0, "discounted_price": 135.88, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<java.lang.String> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.addProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {}
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 20, "name": "Catsuit", "category": "Full Body Outfits", "retail_price": 158.0, "discounted_price": 135.88, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<java.lang.String> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.addProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {}
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 21, "name": "Dungarees", "category": "Full Body Outfits", "retail_price": 437.0, "discounted_price": 362.71, "availability": false}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<java.lang.String> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.addProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {}
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 1, "name": "Dressing Gown", "category": "Underwear", "retail_price": 303.0, "discounted_price": 251.49, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<java.lang.String> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.addProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 400
    Error message = null
          Headers = {}
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = PUT
      Request URI = /products/6
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"retail_price": 325.45, "discounted_price": 260.36, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<java.lang.String> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.updateProduct(java.lang.Long,com.hackerrank.eshopping.product.dashboard.model.UpdateData)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = {}
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = PUT
      Request URI = /products/10
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"retail_price": 284.0, "discounted_price": 227.2, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<java.lang.String> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.updateProduct(java.lang.Long,com.hackerrank.eshopping.product.dashboard.model.UpdateData)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = {}
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = PUT
      Request URI = /products/2
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"retail_price": 150.0, "discounted_price": 123.0, "availability": false}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<java.lang.String> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.updateProduct(java.lang.Long,com.hackerrank.eshopping.product.dashboard.model.UpdateData)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = {}
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = PUT
      Request URI = /products/12
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"retail_price": 350.0, "discounted_price": 283.5, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<java.lang.String> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.updateProduct(java.lang.Long,com.hackerrank.eshopping.product.dashboard.model.UpdateData)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = {}
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = PUT
      Request URI = /products/19
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"retail_price": 125.0, "discounted_price": 100.0, "availability": false}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<java.lang.String> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.updateProduct(java.lang.Long,com.hackerrank.eshopping.product.dashboard.model.UpdateData)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = {}
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = PUT
      Request URI = /products/20
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"retail_price": 250.0, "discounted_price": 200.0, "availability": false}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<java.lang.String> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.updateProduct(java.lang.Long,com.hackerrank.eshopping.product.dashboard.model.UpdateData)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = {}
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = PUT
      Request URI = /products/13
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"retail_price": 500.0, "discounted_price": 450.0, "availability": false}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<java.lang.String> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.updateProduct(java.lang.Long,com.hackerrank.eshopping.product.dashboard.model.UpdateData)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = {}
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = PUT
      Request URI = /products/25
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"retail_price": 311.0, "discounted_price": 258.13, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<java.lang.String> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.updateProduct(java.lang.Long,com.hackerrank.eshopping.product.dashboard.model.UpdateData)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 400
    Error message = null
          Headers = {}
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /products/2
       Parameters = {}
          Headers = {}
             Body = null
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<java.lang.String> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.getProductById(java.lang.Long)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":2,"name":"Shoes","category":"Footwear","retail_price":150.0,"discounted_price":123.0,"discount_percent":18,"availability":false}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /products/25
       Parameters = {}
          Headers = {}
             Body = null
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<java.lang.String> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.getProductById(java.lang.Long)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 404
    Error message = null
          Headers = {}
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /products
       Parameters = {category=[Accessories]}
          Headers = {}
             Body = null
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<java.util.List<com.hackerrank.eshopping.product.dashboard.model.Product>> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.getProductsByCategory(java.lang.String)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = [{"id":8,"name":"Kaftan","category":"Accessories","retail_price":237.0,"discounted_price":215.67,"discount_percent":100,"availability":true},{"id":10,"name":"Cufflinks","category":"Accessories","retail_price":284.0,"discounted_price":227.2,"discount_percent":20,"availability":true},{"id":6,"name":"Shawl","category":"Accessories","retail_price":325.45,"discounted_price":260.36,"discount_percent":7,"availability":true},{"id":12,"name":"Poncho","category":"Accessories","retail_price":350.0,"discounted_price":283.5,"discount_percent":19,"availability":true},{"id":7,"name":"Belt","category":"Accessories","retail_price":471.0,"discounted_price":419.19,"discount_percent":100,"availability":true},{"id":13,"name":"Cummerbund","category":"Accessories","retail_price":500.0,"discounted_price":450.0,"discount_percent":8,"availability":false}]
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /products
       Parameters = {category=[Swimwear]}
          Headers = {}
             Body = null
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<java.util.List<com.hackerrank.eshopping.product.dashboard.model.Product>> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.getProductsByCategory(java.lang.String)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = []
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /products
       Parameters = {category=[Full Body Outfits], availability=[1]}
          Headers = {}
             Body = null
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<java.util.List<com.hackerrank.eshopping.product.dashboard.model.Product>> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.getproductByCatAndAvail(java.lang.String,boolean)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = [{"id":14,"name":"Dress","category":"Full Body Outfits","retail_price":175.0,"discounted_price":140.0,"discount_percent":100,"availability":true},{"id":1,"name":"Dressing Gown","category":"Full Body Outfits","retail_price":303.0,"discounted_price":251.49,"discount_percent":100,"availability":true},{"id":3,"name":"Nightgown","category":"Full Body Outfits","retail_price":307.0,"discounted_price":254.81,"discount_percent":100,"availability":true},{"id":17,"name":"Tailcoat","category":"Full Body Outfits","retail_price":307.0,"discounted_price":254.81,"discount_percent":100,"availability":true},{"id":5,"name":"Ball Gown","category":"Full Body Outfits","retail_price":337.0,"discounted_price":272.97,"discount_percent":100,"availability":true},{"id":9,"name":"Overalls","category":"Full Body Outfits","retail_price":374.0,"discounted_price":321.64,"discount_percent":100,"availability":true},{"id":19,"name":"Suit","category":"Full Body Outfits","retail_price":125.0,"discounted_price":100.0,"discount_percent":36,"availability":false},{"id":20,"name":"Catsuit","category":"Full Body Outfits","retail_price":250.0,"discounted_price":200.0,"discount_percent":14,"availability":false},{"id":21,"name":"Dungarees","category":"Full Body Outfits","retail_price":437.0,"discounted_price":362.71,"discount_percent":100,"availability":false},{"id":16,"name":"Tracksuit","category":"Full Body Outfits","retail_price":471.0,"discounted_price":423.9,"discount_percent":100,"availability":false}]
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /products
       Parameters = {category=[Swimwear], availability=[1]}
          Headers = {}
             Body = null
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<java.util.List<com.hackerrank.eshopping.product.dashboard.model.Product>> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.getproductByCatAndAvail(java.lang.String,boolean)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = []
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /products
       Parameters = {}
          Headers = {}
             Body = null
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<java.util.List<com.hackerrank.eshopping.product.dashboard.model.Product>> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.getProducts()

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = [{"id":1,"name":"Dressing Gown","category":"Full Body Outfits","retail_price":303.0,"discounted_price":251.49,"discount_percent":100,"availability":true},{"id":2,"name":"Shoes","category":"Footwear","retail_price":150.0,"discounted_price":123.0,"discount_percent":18,"availability":false},{"id":3,"name":"Nightgown","category":"Full Body Outfits","retail_price":307.0,"discounted_price":254.81,"discount_percent":100,"availability":true},{"id":4,"name":"Boots","category":"Footwear","retail_price":162.0,"discounted_price":132.84,"discount_percent":100,"availability":true},{"id":5,"name":"Ball Gown","category":"Full Body Outfits","retail_price":337.0,"discounted_price":272.97,"discount_percent":100,"availability":true},{"id":6,"name":"Shawl","category":"Accessories","retail_price":325.45,"discounted_price":260.36,"discount_percent":7,"availability":true},{"id":7,"name":"Belt","category":"Accessories","retail_price":471.0,"discounted_price":419.19,"discount_percent":100,"availability":true},{"id":8,"name":"Kaftan","category":"Accessories","retail_price":237.0,"discounted_price":215.67,"discount_percent":100,"availability":true},{"id":9,"name":"Overalls","category":"Full Body Outfits","retail_price":374.0,"discounted_price":321.64,"discount_percent":100,"availability":true},{"id":10,"name":"Cufflinks","category":"Accessories","retail_price":284.0,"discounted_price":227.2,"discount_percent":20,"availability":true},{"id":11,"name":"Cargos","category":"Bottoms","retail_price":498.0,"discounted_price":428.28,"discount_percent":100,"availability":true},{"id":12,"name":"Poncho","category":"Accessories","retail_price":350.0,"discounted_price":283.5,"discount_percent":19,"availability":true},{"id":13,"name":"Cummerbund","category":"Accessories","retail_price":500.0,"discounted_price":450.0,"discount_percent":8,"availability":false},{"id":14,"name":"Dress","category":"Full Body Outfits","retail_price":175.0,"discounted_price":140.0,"discount_percent":100,"availability":true},{"id":15,"name":"Trainers","category":"Footwear","retail_price":228.0,"discounted_price":184.68,"discount_percent":100,"availability":true},{"id":16,"name":"Tracksuit","category":"Full Body Outfits","retail_price":471.0,"discounted_price":423.9,"discount_percent":100,"availability":false},{"id":17,"name":"Tailcoat","category":"Full Body Outfits","retail_price":307.0,"discounted_price":254.81,"discount_percent":100,"availability":true},{"id":18,"name":"Vest","category":"Tops","retail_price":446.0,"discounted_price":392.48,"discount_percent":100,"availability":true},{"id":19,"name":"Suit","category":"Full Body Outfits","retail_price":125.0,"discounted_price":100.0,"discount_percent":36,"availability":false},{"id":20,"name":"Catsuit","category":"Full Body Outfits","retail_price":250.0,"discounted_price":200.0,"discount_percent":14,"availability":false},{"id":21,"name":"Dungarees","category":"Full Body Outfits","retail_price":437.0,"discounted_price":362.71,"discount_percent":100,"availability":false}]
    Forwarded URL = null
   Redirected URL = null
          Cookies = []
]]></system-out>
  </testcase>
</testsuite>